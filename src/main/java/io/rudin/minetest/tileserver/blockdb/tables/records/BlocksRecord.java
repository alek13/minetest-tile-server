/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables.records;


import io.rudin.minetest.tileserver.blockdb.tables.Blocks;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlocksRecord extends UpdatableRecordImpl<BlocksRecord> implements Record5<Integer, Integer, Integer, byte[], Long> {

    private static final long serialVersionUID = -1369688349;

    /**
     * Setter for <code>blocks.posx</code>.
     */
    public void setPosx(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>blocks.posx</code>.
     */
    public Integer getPosx() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>blocks.posy</code>.
     */
    public void setPosy(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>blocks.posy</code>.
     */
    public Integer getPosy() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>blocks.posz</code>.
     */
    public void setPosz(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>blocks.posz</code>.
     */
    public Integer getPosz() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>blocks.data</code>.
     */
    public void setData(byte... value) {
        set(3, value);
    }

    /**
     * Getter for <code>blocks.data</code>.
     */
    public byte[] getData() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>blocks.mtime</code>.
     */
    public void setMtime(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>blocks.mtime</code>.
     */
    public Long getMtime() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, byte[], Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, byte[], Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Blocks.BLOCKS.POSX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Blocks.BLOCKS.POSY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Blocks.BLOCKS.POSZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field4() {
        return Blocks.BLOCKS.DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return Blocks.BLOCKS.MTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getPosx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getPosy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getPosz();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component4() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component5() {
        return getMtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPosx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPosy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPosz();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value4() {
        return getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getMtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlocksRecord value1(Integer value) {
        setPosx(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlocksRecord value2(Integer value) {
        setPosy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlocksRecord value3(Integer value) {
        setPosz(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlocksRecord value4(byte... value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlocksRecord value5(Long value) {
        setMtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlocksRecord values(Integer value1, Integer value2, Integer value3, byte[] value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BlocksRecord
     */
    public BlocksRecord() {
        super(Blocks.BLOCKS);
    }

    /**
     * Create a detached, initialised BlocksRecord
     */
    public BlocksRecord(Integer posx, Integer posy, Integer posz, byte[] data, Long mtime) {
        super(Blocks.BLOCKS);

        set(0, posx);
        set(1, posy);
        set(2, posz);
        set(3, data);
        set(4, mtime);
    }
}
