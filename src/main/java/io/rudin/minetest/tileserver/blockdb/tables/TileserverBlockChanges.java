/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables;


import io.rudin.minetest.tileserver.blockdb.DefaultSchema;
import io.rudin.minetest.tileserver.blockdb.Indexes;
import io.rudin.minetest.tileserver.blockdb.Keys;
import io.rudin.minetest.tileserver.blockdb.tables.records.TileserverBlockChangesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TileserverBlockChanges extends TableImpl<TileserverBlockChangesRecord> {

    private static final long serialVersionUID = -80564563;

    /**
     * The reference instance of <code>tileserver_block_changes</code>
     */
    public static final TileserverBlockChanges TILESERVER_BLOCK_CHANGES = new TileserverBlockChanges();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TileserverBlockChangesRecord> getRecordType() {
        return TileserverBlockChangesRecord.class;
    }

    /**
     * The column <code>tileserver_block_changes.posx</code>.
     */
    public final TableField<TileserverBlockChangesRecord, Integer> POSX = createField("posx", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_block_changes.posy</code>.
     */
    public final TableField<TileserverBlockChangesRecord, Integer> POSY = createField("posy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_block_changes.posz</code>.
     */
    public final TableField<TileserverBlockChangesRecord, Integer> POSZ = createField("posz", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_block_changes.changed</code>.
     */
    public final TableField<TileserverBlockChangesRecord, Boolean> CHANGED = createField("changed", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>tileserver_block_changes</code> table reference
     */
    public TileserverBlockChanges() {
        this(DSL.name("tileserver_block_changes"), null);
    }

    /**
     * Create an aliased <code>tileserver_block_changes</code> table reference
     */
    public TileserverBlockChanges(String alias) {
        this(DSL.name(alias), TILESERVER_BLOCK_CHANGES);
    }

    /**
     * Create an aliased <code>tileserver_block_changes</code> table reference
     */
    public TileserverBlockChanges(Name alias) {
        this(alias, TILESERVER_BLOCK_CHANGES);
    }

    private TileserverBlockChanges(Name alias, Table<TileserverBlockChangesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TileserverBlockChanges(Name alias, Table<TileserverBlockChangesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TILESERVER_BLOCK_CHANGES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TileserverBlockChangesRecord> getPrimaryKey() {
        return Keys.TILESERVER_BLOCK_CHANGES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TileserverBlockChangesRecord>> getKeys() {
        return Arrays.<UniqueKey<TileserverBlockChangesRecord>>asList(Keys.TILESERVER_BLOCK_CHANGES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TileserverBlockChanges as(String alias) {
        return new TileserverBlockChanges(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TileserverBlockChanges as(Name alias) {
        return new TileserverBlockChanges(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TileserverBlockChanges rename(String name) {
        return new TileserverBlockChanges(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TileserverBlockChanges rename(Name name) {
        return new TileserverBlockChanges(name, null);
    }
}
