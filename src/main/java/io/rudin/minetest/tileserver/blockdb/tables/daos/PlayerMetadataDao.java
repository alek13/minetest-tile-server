/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables.daos;


import io.rudin.minetest.tileserver.blockdb.tables.PlayerMetadata;
import io.rudin.minetest.tileserver.blockdb.tables.records.PlayerMetadataRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerMetadataDao extends DAOImpl<PlayerMetadataRecord, io.rudin.minetest.tileserver.blockdb.tables.pojos.PlayerMetadata, Record2<String, String>> {

    /**
     * Create a new PlayerMetadataDao without any configuration
     */
    public PlayerMetadataDao() {
        super(PlayerMetadata.PLAYER_METADATA, io.rudin.minetest.tileserver.blockdb.tables.pojos.PlayerMetadata.class);
    }

    /**
     * Create a new PlayerMetadataDao with an attached configuration
     */
    public PlayerMetadataDao(Configuration configuration) {
        super(PlayerMetadata.PLAYER_METADATA, io.rudin.minetest.tileserver.blockdb.tables.pojos.PlayerMetadata.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(io.rudin.minetest.tileserver.blockdb.tables.pojos.PlayerMetadata object) {
        return compositeKeyRecord(object.getPlayer(), object.getAttr());
    }

    /**
     * Fetch records that have <code>player IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.PlayerMetadata> fetchByPlayer(String... values) {
        return fetch(PlayerMetadata.PLAYER_METADATA.PLAYER, values);
    }

    /**
     * Fetch records that have <code>attr IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.PlayerMetadata> fetchByAttr(String... values) {
        return fetch(PlayerMetadata.PLAYER_METADATA.ATTR, values);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.PlayerMetadata> fetchByValue(String... values) {
        return fetch(PlayerMetadata.PLAYER_METADATA.VALUE, values);
    }
}
