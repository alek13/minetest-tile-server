/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables.daos;


import io.rudin.minetest.tileserver.blockdb.tables.TileserverTiles;
import io.rudin.minetest.tileserver.blockdb.tables.records.TileserverTilesRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TileserverTilesDao extends DAOImpl<TileserverTilesRecord, io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles, Record3<Integer, Integer, Integer>> {

    /**
     * Create a new TileserverTilesDao without any configuration
     */
    public TileserverTilesDao() {
        super(TileserverTiles.TILESERVER_TILES, io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles.class);
    }

    /**
     * Create a new TileserverTilesDao with an attached configuration
     */
    public TileserverTilesDao(Configuration configuration) {
        super(TileserverTiles.TILESERVER_TILES, io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record3<Integer, Integer, Integer> getId(io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles object) {
        return compositeKeyRecord(object.getX(), object.getY(), object.getZ());
    }

    /**
     * Fetch records that have <code>x IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles> fetchByX(Integer... values) {
        return fetch(TileserverTiles.TILESERVER_TILES.X, values);
    }

    /**
     * Fetch records that have <code>y IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles> fetchByY(Integer... values) {
        return fetch(TileserverTiles.TILESERVER_TILES.Y, values);
    }

    /**
     * Fetch records that have <code>z IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles> fetchByZ(Integer... values) {
        return fetch(TileserverTiles.TILESERVER_TILES.Z, values);
    }

    /**
     * Fetch records that have <code>mtime IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles> fetchByMtime(Long... values) {
        return fetch(TileserverTiles.TILESERVER_TILES.MTIME, values);
    }

    /**
     * Fetch records that have <code>tile IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverTiles> fetchByTile(byte[]... values) {
        return fetch(TileserverTiles.TILESERVER_TILES.TILE, values);
    }
}
