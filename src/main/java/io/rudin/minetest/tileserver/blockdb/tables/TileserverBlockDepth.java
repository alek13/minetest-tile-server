/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables;


import io.rudin.minetest.tileserver.blockdb.DefaultSchema;
import io.rudin.minetest.tileserver.blockdb.Indexes;
import io.rudin.minetest.tileserver.blockdb.Keys;
import io.rudin.minetest.tileserver.blockdb.tables.records.TileserverBlockDepthRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TileserverBlockDepth extends TableImpl<TileserverBlockDepthRecord> {

    private static final long serialVersionUID = -310178365;

    /**
     * The reference instance of <code>tileserver_block_depth</code>
     */
    public static final TileserverBlockDepth TILESERVER_BLOCK_DEPTH = new TileserverBlockDepth();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TileserverBlockDepthRecord> getRecordType() {
        return TileserverBlockDepthRecord.class;
    }

    /**
     * The column <code>tileserver_block_depth.posx</code>.
     */
    public final TableField<TileserverBlockDepthRecord, Integer> POSX = createField("posx", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_block_depth.posz</code>.
     */
    public final TableField<TileserverBlockDepthRecord, Integer> POSZ = createField("posz", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_block_depth.visibley</code>.
     */
    public final TableField<TileserverBlockDepthRecord, Integer> VISIBLEY = createField("visibley", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>tileserver_block_depth</code> table reference
     */
    public TileserverBlockDepth() {
        this(DSL.name("tileserver_block_depth"), null);
    }

    /**
     * Create an aliased <code>tileserver_block_depth</code> table reference
     */
    public TileserverBlockDepth(String alias) {
        this(DSL.name(alias), TILESERVER_BLOCK_DEPTH);
    }

    /**
     * Create an aliased <code>tileserver_block_depth</code> table reference
     */
    public TileserverBlockDepth(Name alias) {
        this(alias, TILESERVER_BLOCK_DEPTH);
    }

    private TileserverBlockDepth(Name alias, Table<TileserverBlockDepthRecord> aliased) {
        this(alias, aliased, null);
    }

    private TileserverBlockDepth(Name alias, Table<TileserverBlockDepthRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TILESERVER_BLOCK_DEPTH_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TileserverBlockDepthRecord> getPrimaryKey() {
        return Keys.TILESERVER_BLOCK_DEPTH_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TileserverBlockDepthRecord>> getKeys() {
        return Arrays.<UniqueKey<TileserverBlockDepthRecord>>asList(Keys.TILESERVER_BLOCK_DEPTH_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TileserverBlockDepth as(String alias) {
        return new TileserverBlockDepth(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TileserverBlockDepth as(Name alias) {
        return new TileserverBlockDepth(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TileserverBlockDepth rename(String name) {
        return new TileserverBlockDepth(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TileserverBlockDepth rename(Name name) {
        return new TileserverBlockDepth(name, null);
    }
}
