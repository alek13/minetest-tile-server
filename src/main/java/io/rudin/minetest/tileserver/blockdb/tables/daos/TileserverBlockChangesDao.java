/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables.daos;


import io.rudin.minetest.tileserver.blockdb.tables.TileserverBlockChanges;
import io.rudin.minetest.tileserver.blockdb.tables.records.TileserverBlockChangesRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TileserverBlockChangesDao extends DAOImpl<TileserverBlockChangesRecord, io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges, Record3<Integer, Integer, Integer>> {

    /**
     * Create a new TileserverBlockChangesDao without any configuration
     */
    public TileserverBlockChangesDao() {
        super(TileserverBlockChanges.TILESERVER_BLOCK_CHANGES, io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges.class);
    }

    /**
     * Create a new TileserverBlockChangesDao with an attached configuration
     */
    public TileserverBlockChangesDao(Configuration configuration) {
        super(TileserverBlockChanges.TILESERVER_BLOCK_CHANGES, io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record3<Integer, Integer, Integer> getId(io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges object) {
        return compositeKeyRecord(object.getPosx(), object.getPosy(), object.getPosz());
    }

    /**
     * Fetch records that have <code>posx IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges> fetchByPosx(Integer... values) {
        return fetch(TileserverBlockChanges.TILESERVER_BLOCK_CHANGES.POSX, values);
    }

    /**
     * Fetch records that have <code>posy IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges> fetchByPosy(Integer... values) {
        return fetch(TileserverBlockChanges.TILESERVER_BLOCK_CHANGES.POSY, values);
    }

    /**
     * Fetch records that have <code>posz IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges> fetchByPosz(Integer... values) {
        return fetch(TileserverBlockChanges.TILESERVER_BLOCK_CHANGES.POSZ, values);
    }

    /**
     * Fetch records that have <code>changed IN (values)</code>
     */
    public List<io.rudin.minetest.tileserver.blockdb.tables.pojos.TileserverBlockChanges> fetchByChanged(Boolean... values) {
        return fetch(TileserverBlockChanges.TILESERVER_BLOCK_CHANGES.CHANGED, values);
    }
}
