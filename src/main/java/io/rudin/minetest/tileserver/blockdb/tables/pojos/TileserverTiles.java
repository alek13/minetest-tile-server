/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TileserverTiles implements Serializable {

    private static final long serialVersionUID = 1480737257;

    private Integer x;
    private Integer y;
    private Integer z;
    private Long    mtime;
    private byte[]  tile;

    public TileserverTiles() {}

    public TileserverTiles(TileserverTiles value) {
        this.x = value.x;
        this.y = value.y;
        this.z = value.z;
        this.mtime = value.mtime;
        this.tile = value.tile;
    }

    public TileserverTiles(
        Integer x,
        Integer y,
        Integer z,
        Long    mtime,
        byte[]  tile
    ) {
        this.x = x;
        this.y = y;
        this.z = z;
        this.mtime = mtime;
        this.tile = tile;
    }

    public Integer getX() {
        return this.x;
    }

    public void setX(Integer x) {
        this.x = x;
    }

    public Integer getY() {
        return this.y;
    }

    public void setY(Integer y) {
        this.y = y;
    }

    public Integer getZ() {
        return this.z;
    }

    public void setZ(Integer z) {
        this.z = z;
    }

    public Long getMtime() {
        return this.mtime;
    }

    public void setMtime(Long mtime) {
        this.mtime = mtime;
    }

    public byte[] getTile() {
        return this.tile;
    }

    public void setTile(byte... tile) {
        this.tile = tile;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TileserverTiles (");

        sb.append(x);
        sb.append(", ").append(y);
        sb.append(", ").append(z);
        sb.append(", ").append(mtime);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
