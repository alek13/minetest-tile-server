/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables;


import io.rudin.minetest.tileserver.blockdb.DefaultSchema;
import io.rudin.minetest.tileserver.blockdb.Indexes;
import io.rudin.minetest.tileserver.blockdb.Keys;
import io.rudin.minetest.tileserver.blockdb.tables.records.PlayerInventoryItemsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerInventoryItems extends TableImpl<PlayerInventoryItemsRecord> {

    private static final long serialVersionUID = 1023506151;

    /**
     * The reference instance of <code>player_inventory_items</code>
     */
    public static final PlayerInventoryItems PLAYER_INVENTORY_ITEMS = new PlayerInventoryItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlayerInventoryItemsRecord> getRecordType() {
        return PlayerInventoryItemsRecord.class;
    }

    /**
     * The column <code>player_inventory_items.player</code>.
     */
    public final TableField<PlayerInventoryItemsRecord, String> PLAYER = createField("player", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false), this, "");

    /**
     * The column <code>player_inventory_items.inv_id</code>.
     */
    public final TableField<PlayerInventoryItemsRecord, Integer> INV_ID = createField("inv_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>player_inventory_items.slot_id</code>.
     */
    public final TableField<PlayerInventoryItemsRecord, Integer> SLOT_ID = createField("slot_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>player_inventory_items.item</code>.
     */
    public final TableField<PlayerInventoryItemsRecord, String> ITEM = createField("item", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaultValue(org.jooq.impl.DSL.field("''::text", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>player_inventory_items</code> table reference
     */
    public PlayerInventoryItems() {
        this(DSL.name("player_inventory_items"), null);
    }

    /**
     * Create an aliased <code>player_inventory_items</code> table reference
     */
    public PlayerInventoryItems(String alias) {
        this(DSL.name(alias), PLAYER_INVENTORY_ITEMS);
    }

    /**
     * Create an aliased <code>player_inventory_items</code> table reference
     */
    public PlayerInventoryItems(Name alias) {
        this(alias, PLAYER_INVENTORY_ITEMS);
    }

    private PlayerInventoryItems(Name alias, Table<PlayerInventoryItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PlayerInventoryItems(Name alias, Table<PlayerInventoryItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PLAYER_INVENTORY_ITEMS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlayerInventoryItemsRecord> getPrimaryKey() {
        return Keys.PLAYER_INVENTORY_ITEMS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlayerInventoryItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<PlayerInventoryItemsRecord>>asList(Keys.PLAYER_INVENTORY_ITEMS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PlayerInventoryItemsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PlayerInventoryItemsRecord, ?>>asList(Keys.PLAYER_INVENTORY_ITEMS__PLAYER_INVENTORY_ITEMS_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerInventoryItems as(String alias) {
        return new PlayerInventoryItems(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerInventoryItems as(Name alias) {
        return new PlayerInventoryItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PlayerInventoryItems rename(String name) {
        return new PlayerInventoryItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PlayerInventoryItems rename(Name name) {
        return new PlayerInventoryItems(name, null);
    }
}
