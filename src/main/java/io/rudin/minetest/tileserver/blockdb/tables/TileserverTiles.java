/*
 * This file is generated by jOOQ.
*/
package io.rudin.minetest.tileserver.blockdb.tables;


import io.rudin.minetest.tileserver.blockdb.DefaultSchema;
import io.rudin.minetest.tileserver.blockdb.Indexes;
import io.rudin.minetest.tileserver.blockdb.Keys;
import io.rudin.minetest.tileserver.blockdb.tables.records.TileserverTilesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TileserverTiles extends TableImpl<TileserverTilesRecord> {

    private static final long serialVersionUID = -916322810;

    /**
     * The reference instance of <code>tileserver_tiles</code>
     */
    public static final TileserverTiles TILESERVER_TILES = new TileserverTiles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TileserverTilesRecord> getRecordType() {
        return TileserverTilesRecord.class;
    }

    /**
     * The column <code>tileserver_tiles.x</code>.
     */
    public final TableField<TileserverTilesRecord, Integer> X = createField("x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_tiles.y</code>.
     */
    public final TableField<TileserverTilesRecord, Integer> Y = createField("y", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_tiles.z</code>.
     */
    public final TableField<TileserverTilesRecord, Integer> Z = createField("z", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tileserver_tiles.mtime</code>.
     */
    public final TableField<TileserverTilesRecord, Long> MTIME = createField("mtime", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>tileserver_tiles.tile</code>.
     */
    public final TableField<TileserverTilesRecord, byte[]> TILE = createField("tile", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>tileserver_tiles</code> table reference
     */
    public TileserverTiles() {
        this(DSL.name("tileserver_tiles"), null);
    }

    /**
     * Create an aliased <code>tileserver_tiles</code> table reference
     */
    public TileserverTiles(String alias) {
        this(DSL.name(alias), TILESERVER_TILES);
    }

    /**
     * Create an aliased <code>tileserver_tiles</code> table reference
     */
    public TileserverTiles(Name alias) {
        this(alias, TILESERVER_TILES);
    }

    private TileserverTiles(Name alias, Table<TileserverTilesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TileserverTiles(Name alias, Table<TileserverTilesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TILESERVER_TILES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TileserverTilesRecord> getPrimaryKey() {
        return Keys.TILESERVER_TILES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TileserverTilesRecord>> getKeys() {
        return Arrays.<UniqueKey<TileserverTilesRecord>>asList(Keys.TILESERVER_TILES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TileserverTiles as(String alias) {
        return new TileserverTiles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TileserverTiles as(Name alias) {
        return new TileserverTiles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TileserverTiles rename(String name) {
        return new TileserverTiles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TileserverTiles rename(Name name) {
        return new TileserverTiles(name, null);
    }
}
